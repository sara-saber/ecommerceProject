{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { Cart } from '../models/cart';\nimport { CartItem } from '../models/cartItem';\nimport * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    this.tpS = new BehaviorSubject(10);\n    this.totalPrice = this.tpS.asObservable();\n    this.cart = new Cart();\n  }\n  addToCart(product) {\n    let carditem = this.cart.items.find(x => x.product.id === product.id);\n    if (carditem) {\n      carditem.quantity += 1;\n      return;\n    }\n    this.cart.items.push(new CartItem(product));\n  }\n  removeFromCart(product) {\n    let carditem = this.cart.items.findIndex(x => x.product.id === product.id);\n    this.cart.items.splice(carditem, 1);\n    return this.getCart();\n  }\n  getCart() {\n    return this.cart;\n  }\n  ChangeTotalPrice(totalPrice) {\n    this.tpS.next(totalPrice);\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)();\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;AAEtC,SAASC,IAAI,QAAQ,gBAAgB;AACrC,SAASC,QAAQ,QAAQ,oBAAoB;;AAK7C,OAAM,MAAOC,WAAW;EAHxBC;IAIU,QAAG,GAA4B,IAAIJ,eAAe,CAAS,EAAE,CAAC;IACtE,eAAU,GAAG,IAAI,CAACK,GAAG,CAACC,YAAY,EAAE;IACpC,SAAI,GAAS,IAAIL,IAAI,EAAE;;EACvBM,SAAS,CAACC,OAAgB;IACxB,IAAIC,QAAQ,GAAG,IAAI,CAACC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACL,OAAO,CAACM,EAAE,KAAKN,OAAO,CAACM,EAAE,CAAC;IACrE,IAAIL,QAAQ,EAAE;MACZA,QAAQ,CAACM,QAAQ,IAAI,CAAC;MACtB;;IAEF,IAAI,CAACL,IAAI,CAACC,KAAK,CAACK,IAAI,CAAC,IAAId,QAAQ,CAACM,OAAO,CAAC,CAAC;EAC7C;EACAS,cAAc,CAACT,OAAgB;IAC7B,IAAIC,QAAQ,GAAG,IAAI,CAACC,IAAI,CAACC,KAAK,CAACO,SAAS,CAACL,CAAC,IAAIA,CAAC,CAACL,OAAO,CAACM,EAAE,KAAKN,OAAO,CAACM,EAAE,CAAC;IAC1E,IAAI,CAACJ,IAAI,CAACC,KAAK,CAACQ,MAAM,CAACV,QAAQ,EAAE,CAAC,CAAC;IACnC,OAAO,IAAI,CAACW,OAAO,EAAE;EACvB;EACAA,OAAO;IACL,OAAO,IAAI,CAACV,IAAI;EAClB;EACAW,gBAAgB,CAACC,UAAkB;IACjC,IAAI,CAACjB,GAAG,CAACkB,IAAI,CAACD,UAAU,CAAC;EAC3B;;AAtBWnB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAqB,SAAXrB,WAAW;EAAAsB,YAFV;AAAM","names":["BehaviorSubject","Cart","CartItem","CartService","constructor","tpS","asObservable","addToCart","product","carditem","cart","items","find","x","id","quantity","push","removeFromCart","findIndex","splice","getCart","ChangeTotalPrice","totalPrice","next","factory","providedIn"],"sourceRoot":"","sources":["D:\\Projects\\proje1\\src\\app\\modules\\shoping-cart\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Product } from '../../products/models/product';\nimport { Cart } from '../models/cart';\nimport { CartItem } from '../models/cartItem';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  private tpS: BehaviorSubject<Number> = new BehaviorSubject<Number>(10);\n  totalPrice = this.tpS.asObservable()\n  cart: Cart = new Cart()\n  addToCart(product: Product) {\n    let carditem = this.cart.items.find(x => x.product.id === product.id)\n    if (carditem) {\n      carditem.quantity += 1\n      return\n    }\n    this.cart.items.push(new CartItem(product))\n  }\n  removeFromCart(product: Product) {\n    let carditem = this.cart.items.findIndex(x => x.product.id === product.id)\n    this.cart.items.splice(carditem, 1)\n    return this.getCart()\n  }\n  getCart(): Cart {\n    return this.cart\n  }\n  ChangeTotalPrice(totalPrice: Number) {\n    this.tpS.next(totalPrice)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}